{
    "openapi": "3.0.3",
    "info": {
        "title": "Borga Games",
        "description": "IPW First Assignement API. Manage your game collection.",
        "termsOfService": "http://swagger.io/terms/",
        "servers": ["http://localhost:8888"]
    },
    "servers": [
        {
            "url": "http://localhost:8888/api",
            "description": "Local Server"
        },
        {
            "url": "http://isel-ipw-2122-1-g13d2.herokuapp.com/api",
            "description": "Production Server"
        }
    ],
    "tags":[
        {
            "name": "Global",
            "description": "Request that can be done without authenticating."
        },
        {
            "name": "User",
            "description": "Request that can only be done while authenticated."
        }  
    ],
    "paths": {
        "/games/popular": {
            "get": {
                "tags": [
                    "Global"
                ],
               "summary": "Gets the 10 most popular games.",
               "responses": {
                  "200": {
                     "description": "If everything goes right.",
                    "content":{
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GameList"
                            }
                        }
                    }
                  },
                  "502": {
                    "description": "Board Game Atlas is not responding.",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/AppError"
                        }
                      }
                    }
                  }
               }
            }
         },
         "/games": {
            "get": {
                "tags": [
                    "Global"
                ],
                "summary": "Gets 10 games based on this search.",
                "parameters": [
                    {
                        "name": "gameName",
                        "in": "query",
                        "required": true,
                        "description": "Game's name to search for.",
                        "schema": {
                            "type": "string"
                        },
                        "example": "Pandemic"
                    }
                 ],
                "responses": {
                    "200": {
                       "description": "If everything goes right.",
                      "content":{
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/GameList"
                              }
                          }
                      }
                    },
                    "502": {
                        "description": "Board Game Atlas is not responding",
                        "content": {
                          "application/json": {
                            "schema": {
                              "$ref": "#/components/schemas/AppError"
                            }
                          }
                        }
                    },
                    "404": {
                        "description": "No game found with this name",
                        "content": {
                          "application/json": {
                            "schema": {
                              "$ref": "#/components/schemas/AppError"
                            }
                          }
                        }
                    }
                }
            }
         },
        "/register": {
            "post": {
                "tags":[
                    "Global"
                ],
                "summary": "Creates a new user",
                "requestBody": {
                    "description": "username and password to register",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserName"
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "description": "The user is now registed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRegister"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or missing username.",
                        "content": {
                          "application/json": {
                            "schema": {
                              "$ref": "#/components/schemas/AppError"
                            }
                          }
                        }
                    }
                }          
            }
        },  
        "/my/groups":{
            "get":{
                "summary": "Gets all the groups of an user's collection.",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                       "description": "An Array with all of the groups as objects.",
                        "content":{
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupList"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing or Invalid API token. The user is not authenticated.",
                        "content": {
                          "application/json": {
                            "schema": {
                              "$ref": "#/components/schemas/AppError"
                            }
                          }
                        }
                    }
                },
                "security:": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post":{
                "tags": [
                    "User"
                ],
                "summary": "Creates a new Game's Group.",
                "requestBody":{
                    "description": "Create group with a name and description",
                    "required": true,
                    "content":{
                        "application/json":{
                            "schema": {
                                "$ref": "#/components/schemas/GroupCreator"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Group successfuly created",
                        "content":{
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupCreatorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing group name or group already exists.",
                        "content": {
                          "application/json": {
                            "schema": {
                              "$ref": "#/components/schemas/AppError"
                            }
                          }
                        }
                    },
                    "401": {
                        "description": "Missing or Invalid API token. The user is not authenticated.",
                        "content": {
                          "application/json": {
                            "schema": {
                              "$ref": "#/components/schemas/AppError"
                            }
                          }
                        }
                    }
                }
            }
        },
        "/my/groups/{groupID}":{
            "get":{
                "summary": "Gets a group of an user's collection.",
                "security:": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "groupID",
                        "in": "path",
                        "required": true,
                        "description": "Respective Group.",
                        "schema": {
                            "type": "string"
                        },
                        "example": "12312314"
                    }
                 ],
                "responses":{
                    "200": {
                        "description": "If everything goes right.",
                       "content":{
                           "application/json": {
                               "schema": {
                                   "$ref": "#/components/schemas/GroupResponse"
                                 }
                             }
                         }
                    },
                    "400": {
                        "description": "Inexistant Group in user's collection.",
                        "content": {
                          "application/json": {
                            "schema": {
                              "$ref": "#/components/schemas/AppError"
                            }
                          }
                        }
                    },
                    "401": {
                        "description": "Missing or Invalid API token. The user is not authenticated.",
                        "content": {
                          "application/json": {
                            "schema": {
                              "$ref": "#/components/schemas/AppError"
                            }
                          }
                        }
                    }
                }       
            },
            "put":{
                "tags": [
                    "User"
                ],
                "summary": "Edits a group from an user's collection.",
                "requestBody":{
                    "description": "Group name to edit and the respective new group name and new description",
                    "required": true,
                    "content":{
                        "application/json":{
                            "schema": {
                                "$ref": "#/components/schemas/GroupEditBody"
                            }
                        }
                    }
                },
                "parameters":[
                    {
                        "name": "groupID",
                        "in": "path",
                        "required": true,
                        "description": "Group to edit.",
                        "schema": {
                            "type": "string"
                        },
                        "example": "12312314"
                    }
                ],
                "responses":{
                    "200": {
                        "description": "The group got succesfully edited",
                        "content":{
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupEditResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or missing group name to edit or missing new group name and new description.",
                        "content": {
                          "application/json": {
                            "schema": {
                              "$ref": "#/components/schemas/AppError"
                            }
                          }
                        }
                    },
                    "401": {
                        "description": "Missing or Invalid API token. The user is not authenticated.",
                        "content": {
                          "application/json": {
                            "schema": {
                              "$ref": "#/components/schemas/AppError"
                            }
                          }
                        }
                    }     
                }
            },
            "delete":{
                "tags": [
                    "User"
                ],
                "summary": "Deletes a group from a user's collection.",
                "parameters":[
                    {
                        "name": "groupID",
                        "in": "path",
                        "required": true,
                        "description": "Group to delete.",
                        "schema": {
                            "type": "string"
                        },
                        "example": "12312314"
                    }
                ],
                "responses":{
                    "200": {
                        "description": "If everything goes right.",
                       "content":{
                           "application/json": {
                               "schema": {
                                   "$ref": "#/components/schemas/GroupDeleteResponse"
                               }
                           }
                       }
                     },
                     "400":{
                        "description": "Invalid group's ID.",
                        "content": {
                          "application/json": {
                            "schema": {
                              "$ref": "#/components/schemas/AppError"
                            }
                          }
                        }
                    },
                    "401": {
                        "description": "Missing or Invalid API token. The user is not authenticated.",
                        "content": {
                          "application/json": {
                            "schema": {
                              "$ref": "#/components/schemas/AppError"
                            }
                          }
                        }
                    }
                } 
            }
        },
        "/my/groups/{groupID}/{gameID}":{
            "delete":{
                "tags": [
                    "User"
                ],
                "summary": "Deletes a game from an user's collection group.",
                "parameters": [
                    {
                        "name": "groupID",
                        "in": "path",
                        "required": true,
                        "description": "Group's ID that contains the game to delete.",
                        "schema": {
                            "type": "string"
                        },
                        "example": "12312341"
                    },
                    {
                        "name": "gameID",
                        "in": "path",
                        "required": true,
                        "description": "Game's ID to delete.",
                        "schema": {
                            "type": "string"
                        },
                        "example": "21342115133412"
                    }
                 ],
                 "responses": {
                    "200": {
                       "description": "If everything goes right.",
                      "content":{
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/GameOperationResponse"
                              }
                          }
                      }
                    },
                    "400":{
                        "description": "Invalid group or game's ID.",
                        "content": {
                          "application/json": {
                            "schema": {
                              "$ref": "#/components/schemas/AppError"
                            }
                          }
                        }
                    },
                    "401": {
                        "description": "Missing or Invalid API token. The user is not authenticated.",
                        "content": {
                          "application/json": {
                            "schema": {
                              "$ref": "#/components/schemas/AppError"
                            }
                          }
                        }
                    }
                }    
            },
            "post":{
                "tags": [
                    "User"
                ],
                "summary": "Adds a game to a group.",
                "parameters": [
                    {
                        "name": "groupID",
                        "in": "path",
                        "required": true,
                        "description": "Group's ID to add the game.",
                        "schema": {
                            "type": "string"
                        },
                        "example": "12312341"
                    },
                    {
                        "name": "gameID",
                        "in": "path",
                        "required": true,
                        "description": "Game's ID to add.",
                        "schema": {
                            "type": "string"
                        },
                        "example": "21342115133412"
                    }
                 ],
                "responses":{
                    "200": {
                        "description": "The game is now in the group",
                        "content": {
                          "application/json": {
                            "schema": {
                              "$ref": "#/components/schemas/GameOperationResponse"
                            }
                          }
                        }
                      },
                    "400": {
                        "description": "Group or game name's missing.",
                        "content": {
                          "application/json": {
                            "schema": {
                              "$ref": "#/components/schemas/AppError"
                            }
                          }
                        }
                      },
                    "401": {
                        "description": "Missing or Invalid API token. The user is not authenticated.",
                        "content": {
                          "application/json": {
                            "schema": {
                              "$ref": "#/components/schemas/AppError"
                            }
                          }
                        }
                    }
                }
            }
        },
        "/games/{gameID}":{
            "get":{
                "tags": [
                    "Global"
                ],
                "summary": "Gets the details of a game.",
                "parameters": [
                    {
                        "name": "gameID",
                        "in": "path",
                        "required": true,
                        "description": "Game's ID to get the details.",
                        "schema": {
                            "type": "string"
                        },
                        "example": "21342115133412"
                    }
                ],
                "responses": {
                    "200": {
                    "description": "If everything goes right.",
                    "content":{
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GameResponse"
                            }
                        }
                    }
                    },
                    "400":{
                        "description": "Missing Game's ID.",
                        "content": {
                        "application/json": {
                            "schema": {
                            "$ref": "#/components/schemas/AppError"
                            }
                        }
                        }
                    },
                    "401": {
                        "description": "Missing or Invalid API token. The user is not authenticated.",
                        "content": {
                        "application/json": {
                            "schema": {
                            "$ref": "#/components/schemas/AppError"
                            }
                        }
                        }
                    }
                }    
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        },
        "schemas":{
            "AppErrorInfo":{
                "description": "Additional information about the error.",
                "nullable": true,
                "anyOf": [
                    {
                        "type": "object"
                    },
                    {
                        "type": "string"
                    },
                    {
                        "type": "integer"
                    },
                    {
                        "type": "number"
                    }
                ],
                "example": "Error ocurred."
            },
            "AppError": {
                "type": "object",
                "description": "Application error",
                "required": [
                "code",
                "name",
                "message"
                ],
                "properties": {
                    "code": {
                        "type": "number",
                        "format": "int32",
                        "description": "Internal error code",
                        "example": 2000
                    },
                    "name": {
                        "type": "string",
                        "description": "Internal error name",
                        "example": "FAIL"
                    },
                    "message": {
                        "type": "string",
                        "description": "Error description message",
                        "example": "An error occurred"
                    },
                    "info": {
                        "$ref": "#/components/schemas/AppErrorInfo"
                    }
                }
            },
            "GameOperationResponse": {
                "type": "object",
                "description": "Game operation completed successfully.",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "responseObject": {
                        "type": "object",
                        "properties":{
                            "groupName":{
                                "type": "string",
                                "example": "groupNameExample"
                            },
                            "gameName":{
                                "type": "string",
                                "example": "Pandemic"
                            } 
                        }
                    }
                }
            },
            "Game":{
                "type": "object",
                "description": "Game data",
                "properties": {
                    "id":{
                        "type": "string",
                        "description": "Board game atlas game's id.",
                        "example": "j8LdPFmePE"
                    },
                    "url":{
                        "type": "string",
                        "description": "Board game atlas game's url.",
                        "example": "https://www.boardgameatlas.com/game/j8LdPFmePE/7-wonders-duel"
                    },
                    "name":{
                        "type": "string",
                        "description": "Board game's name.",
                        "example": "7 Wonders Duel"
                    },
                    "price":{
                        "type": "string",
                        "description": "Board game's price.",
                        "example": "17.50"
                    },
                    "min_players":{
                        "type": "int32",
                        "description": "Board game minimum players required to play.",
                        "example": 2
                    },
                    "max_players":{
                        "type": "int32",
                        "description": "Board game's maximum players required to play.",
                        "example": 2
                    },
                    "min_age":{
                        "type": "int32",
                        "description": "Board game's minimum age required to play.",
                        "example": 10
                    },
                    "description":{
                        "type": "string",
                        "description": "A preview of the description of the game",
                        "example": "7 Wonders Duel  is a fast-paced, two-player edition of Antoine Bauza's award-winning civilization-building game."
                    },
                    "image_url":{
                        "type": "string",
                        "description": "Board game's image url",
                        "example": "https://s3-us-west-1.amazonaws.com/5cc.images/games/uploaded/1629323024736.jpg"
                    },
                    "rules_url":{
                        "type": "string",
                        "description": "Board game's rules url",
                        "example": "http://www.7wondersduel.com/files/rules/7-Wonders-Duel-Rules-US.pdf"
                    },
                    "amazon_rank":{
                        "type": "int32",
                        "description": "Board game's amazon rank",
                        "example": 2763
                    },
                    "official_url": {
                        "type": "string",
                        "description": "Board game's official url",
                        "example": "http://www.7wondersduel.com/7wonders-duel.php?utm_source=boardgameatlas.com&utm_medium=search&utm_campaign=bga_ads"
                    },
                    "borga_rank":{
                        "type": "int32",
                        "description": "Board game atlas game's rank",
                        "example": 10
                    }
                }
            },
            "GameList": {
                "type": "object",
                "description": "Response with a list of games.",
                "properties": {
                    "games": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Game"
                        }
                    }
                }     
            },
            "GameResponse": {
                "type": "object",
                "description": "Response with a game",
                "properties": {
                    "game": {
                        "$ref": "#/components/schemas/Game"
                    }
                }
            },
            "GameAddition": {
              "type": "object",
              "description": "Group id and game id.",
              "properties": {
                  "groupID": {
                      "type": "string",
                      "example": "1231234124"
                  },
                  "gameID": {
                      "type": "string",
                      "example": "6FmFeux5xH"
                  }
              }  
            },
            "Group":{
                "type": "object",
                "description": "User's group",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Game's name identifier.",
                        "example": "MyGames"
                    },
                    "description": {
                        "type": "string",
                        "description": "Group's description.",
                        "example": "Jogos que já joguei"
                    },
                    "games":{
                        "type": "array",
                        "items":{
                            "type": "string",
                            "example": "1231823981"
                        }
                    },
                    "id":{
                        "type": "string",
                        "example": "12341235"
                    }
                }
            },
            "GroupList":{
                "type": "object",
                "description": "User's group",
                "properties": {
                    "groups":{
                        "type": "array",
                        "items":{
                            "$ref": "#/components/schemas/Group"
                        }
                    }
                }
            },
            "GroupListElement":{
                "type": "object",
                "description": "User's group",
                "properties": {
                    "groups":{
                        "type": "array",
                        "items":{
                            "$ref": "#/components/schemas/Group"
                        }
                    }
                }
            },
            "GroupEditResponse":{
                "type": "object",
                "description": "Game edition completed successfully.",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "groupObject":{
                        "type": "object",
                        "properties":{
                            "name":{
                                "type": "string",
                                "example": "New Name"
                            },
                            "description": {
                                "type": "string",
                                "example": "New Description"
                            }
                        }
                    }
                }
            },
            "GroupEditBody":{
                "type": "object",
                "description": "Game to edit body.",
                "properties": {
                    "newGroupName":{
                        "type": "string",
                        "example": "New Name"
                    },
                    "newGroupDescription": {
                        "type": "string",
                        "example": "New Description"
                    }
                }
            },
            "GroupResponse":{
                "type": "object",
                "description": "Response with a group.",
                "properties": {
                    "group": {
                        "type": "object",
                        "description": "User's group",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Game's name identifier.",
                                "example": "MyGames"
                            },
                            "description": {
                                "type": "string",
                                "description": "Group's description.",
                                "example": "Jogos que já joguei"
                            },
                            "id": {
                                "type": "string",
                                "example": "8923849234"
                            },
                            "games":{
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties":{
                                        "id": {
                                            "type": "string",
                                            "example": "1FSfa34As"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Game's name.",
                                            "example": "monopoly"
                                        }
                                    } 
                                }
                            }
                        }
                    }
                }
            },
            "GroupCreator":{
                "type": "object",
                "description": "Object with a group Id and group name and description.",
                "properties": { 
                    "name": {
                        "type": "string",
                        "example": "MyGames"
                    },
                    "description": {
                        "type": "string",
                        "example": "Jogos que já joguei"
                    }
                }
            }, 
            "GroupCreatorResponse":{
                "type": "object",
                "description": "Object with a group Id and group name and description.",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "groupObject":{
                        "type": "object",
                        "properties":{ 
                            "name": {
                                "type": "string",
                                "example": "MyGames"
                            },
                            "description": {
                                "type": "string",
                                "example": "Jogos que já joguei"
                            },
                            "id":{
                                "type": "string",
                                "example": "1231234124"
                            }
                        }
                    }
                }
            },
            "GroupDeleteResponse":{
                "type": "object",
                "description": "Game deleted successfully.",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "groupObject":{
                        "type": "object",
                        "properties":{
                            "name":{
                                "type": "string",
                                "example": "Group's name deleted."
                            }
                        }
                    }
                }
            }, 
            "UserRegister":{
                "type": "object",
                "description": "Response with a user and his token",
                "properties":{
                    "userName": {
                        "type": "string",
                        "example": "User"
                    },
                    "token": {
                        "type": "string",
                        "example": "8e3e3f01-ba66-46ce-ba1a-88a6abad4d6d" 
                    }
                }
            },
            "UserName":{
                "type": "object",
                "description": "Name of the user to register",
                "properties":{
                    "userName": {
                        "type": "string",
                        "example": "User"
                    }
                }
            },
            "GroupNameResponse":{
                "type": "object",
                "description": "Name of the deleted group",
                "properties":{
                    "groupName": {
                        "type": "string",
                        "example": "MyGames"
                    }
                }
            }    
        }    
    }
}